---
import { Image } from 'astro:assets';
import logoAs from '../../public/images/stickers/as-logo.png';
import stickerAbout from '../../public/images/stickers/Memoji_About.png';
import stickerHome from '../../public/images/stickers/Memoji_Home.png';
import stickerMacbook from '../../public/images/stickers/Memoji_MacBook.png';

export interface Props {
  stickerType: 'memoji-about' | 'memoji-home' | 'logo-as' | 'memoji-macbook';
  id?: string;
  'data-is-animated'?: boolean;
  'data-sticker-type'?: string;
  className?: string;
}
const { stickerType, id, className, 'data-is-animated': dataIsAnimated, 'data-sticker-type': dataStickerType } = Astro.props;
const stickerFromData = dataStickerType || stickerType;
const stickerPropsFromData = stickerFromData.split('-');
console.log(Astro.props);
const imageCategoryFromData = stickerPropsFromData[0];
const imageIdentifierFromData = stickerPropsFromData[1];

const returnImage = () => {
  switch (imageCategoryFromData) {
    case 'memoji':
      switch (imageIdentifierFromData) {
        case 'about':
          return {
            altText: 'Jason Schulz Memoji with peace fingers',
            src: stickerAbout,
            className: 'memoji',
          };
        case 'macbook':
          return {
            altText: 'Jason Schulz Memoji with a MacBook',
            src: stickerMacbook,
            className: 'memoji',
          };

        default:
          return {
            altText: 'Jason Schulz Memoji with a pensive expression',
            src: stickerHome,
            className: 'memoji',
          };
      }
    default:
      return {
        altText: 'Anton Schulz logo',
        src: logoAs,
        className: 'logo',
        isLink: true,
        href: 'https://antonschulz.com',
      };
  }
};

const stickerData = returnImage();
---

<div class:list={[stickerData.className]} class={className} data-is-animated={dataIsAnimated} id={id} data-sticker-type={stickerType}>
  {
    stickerData.href ? (
      <a href={stickerData.href} target="_blank">
        <Image src={stickerData.src} alt={stickerData.altText} />
      </a>
    ) : (
      <Image src={stickerData.src} alt={stickerData.altText} />
    )
  }
</div>

<style>
  div {
    height: 120px;
    width: 120px;
    max-width: 100%;
    justify-content: center;
    align-items: center;
    display: flex;
    padding: 15px;
    border-radius: 100px;
    background: #fff;
    display: flex;
    align-self: flex-end;
    position: relative;
    transition: scale 1s ease;
  }

  a {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.5s cubic-bezier(0, 0.55, 0.45, 1);
    :hover {
      cursor: pointer;
    }
  }
  div:has(a:hover) {
    transform: scale(1.01);
  }
  .logo {
    background-color: #d4d7b9;
  }
  @keyframes partial-rotation {
    0%,
    100% {
      transform: rotate(-10deg);
    }
    50% {
      transform: rotate(10deg);
    }
  }

  div[data-is-animated='true'] {
    animation: partial-rotation 1s ease-in-out infinite;
  }

  .animate-rotation {
    animation: partial-rotation 1s ease-in-out infinite;
  }

  .memoji {
    background-color: #ffd600;
  }

  img {
    object-fit: contain;
    width: 80px;
    height: 80px;
  }

  @media screen and (min-width: 640px) {
    div {
      padding: 20px;
      border-radius: 100px;
      height: 150px;
      width: 150px;
    }

    img {
      width: 100px;
      height: 100px;
    }
  }

  @media screen and (min-width: 1024px) {
    div {
      padding: 25px;
      height: 180px;
      width: 180px;
    }

    img {
      width: 115px;
      height: 115px;
    }
  }

  @media screen and (min-width: 1440px) {
    div {
      padding: 25px;
      height: 210px;
      width: 210px;
    }

    img {
      width: 140px;
      height: 140px;
    }
  }
</style>
