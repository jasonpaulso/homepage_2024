---
const baseVars = {
  padding: '16px',
  borderRadius: '10px',
  height: '180px',
  width: '240px',
  titleFontSize: '24px',
  statementFontSize: '8px',
  backgroundBlack: '#222',
  backgroundBrown: '#552e21',
  backgroundDada: '#dadada',
  backgroundSilverGreen: '#D4D7B9',
  colorBeige: '#f8f7f1',
  colorBlack: '#222',
};

const smallMediaVars = {
  smallPadding: '20px',
  smallBorderRadius: '14px',
  smallHeight: '220px',
  smallWidth: '300px',
  smallTitleFontSize: '32px',
  smallStatementFontSize: '10px',
};

const mediumMediaVars = {
  mediumPadding: '24px',
  mediumBorderRadius: '16px',
  mediumHeight: '260px',
  mediumWidth: '360px',
  mediumTitleFontSize: '36px',
  mediumStatementFontSize: '12px',
};

const largeMediaVars = {
  largePadding: '32px',
  largeBorderRadius: '16px',
  largeHeight: '300px',
  largeWidth: '420px',
  largeTitleFontSize: '40px',
  largeStatementFontSize: '14px',
};

const variantColors = [
  { background: baseVars.backgroundBlack, color: baseVars.colorBeige },
  { background: baseVars.backgroundBrown, color: baseVars.colorBeige },
  { background: baseVars.backgroundDada, color: baseVars.colorBlack },
  { background: baseVars.backgroundSilverGreen, color: baseVars.colorBlack },
];

const combinedVars = { ...baseVars, ...smallMediaVars, ...mediumMediaVars, ...largeMediaVars };

const { headline, statement, variant = 0 } = Astro.props;

const colors = variantColors[variant];
---

<div style={{ background: colors.background, color: colors.color }}>
  <h3>{headline || 'Front'}</h3>
  <p>
    {
      statement ||
        `Most recently I planned and built landing pages for various marketing initiatives with a highly effective team of designers and engineers. I did this by drawing on my extensive understanding of front-end web development technologies including
    React, Typescript, Next.js, GraphQL, and Craft CMS.`
    }
  </p>
</div>

<style define:vars={combinedVars}>
  div {
    padding: var(--padding);
    border-radius: var(--borderRadius);
    background: var(--backgroundBlack);
    height: var(--height);
    width: var(--width);
    max-width: 100%;
    flex-direction: column;
    justify-content: space-between;
    align-items: flex-start;
    display: flex;
  }

  h3 {
    font-family: 'Helvetica Now Display';
    font-size: var(--titleFontSize);
    font-style: normal;
    font-weight: 700;
    line-height: 100%;
  }

  p {
    font-family: 'JetBrains Mono';
    font-size: var(--statementFontSize);
    font-style: normal;
    font-weight: 400;
    line-height: 125%;
  }

  @media screen and (min-width: 640px) {
    div {
      padding: var(--smallPadding);
      border-radius: var(--smallBorderRadius);
      height: var(--smallHeight);
      width: var(--smallWidth);
    }

    h3 {
      font-size: var(--smallTitleFontSize);
    }

    p {
      font-size: var(--smallStatementFontSize);
    }
  }

  @media screen and (min-width: 1024px) {
    div {
      padding: var(--mediumPadding);
      border-radius: var(--mediumBorderRadius);
      height: var(--mediumHeight);
      width: var(--mediumWidth);
    }

    h3 {
      font-size: var(--mediumTitleFontSize);
    }

    p {
      font-size: var(--mediumStatementFontSize);
    }
  }

  @media screen and (min-width: 1440px) {
    div {
      padding: var(--largePadding);
      border-radius: var(--largeBorderRadius);
      height: var(--largeHeight);
      width: var(--largeWidth);
    }

    h3 {
      font-size: var(--largeTitleFontSize);
    }

    p {
      font-size: var(--largeStatementFontSize);
    }
  }
</style>
